name: üöÄ Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

jobs:
  lint:
    name: ‚¨£ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: üî¨ Lint
        run: npm run lint

  typecheck:
    name:  ¶ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: üîé Type check
        run: npm run typecheck --if-present

  vitest:
    name: ‚ö° Vitest
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: ‚ö° Run vitest
        run: npm run test -- --coverage

  build:
    name: üê≥ Build
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: üëÄ Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Setup cache
      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üîë Fly Registry Auth
        uses: docker/login-action@v2
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      - name: üê≥ Docker build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: üöö Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  check:
    name: üö¶ Check
    runs-on: ubuntu-latest
    needs: [lint, typecheck, vitest, build]
    outputs:
      isNewerVersion: ${{ steps.compare.outputs.isNewerVersion }}
      versionType: ${{ steps.compare.outputs.versionType }}
      tag: ${{ steps.setTags.outputs.tag }}
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: "Get current Package Version"
        id: PACKAGE_VERSION
        uses: martinbeentjes/npm-get-version-action@v1.2.3

      - name: Set PACKAGE_VERSION and tag
        id: setTags
        run: |
          echo "PACKAGE_VERSION=${{ steps.PACKAGE_VERSION.outputs.current-version }}" >> $GITHUB_ENV
          echo "::set-output name=tag::v${{ steps.PACKAGE_VERSION.outputs.current-version }}"

      - name: Compare the two versions
        uses: ./.github/actions/compare-versions
        id: compare
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          currentVersion: ${{ env.PACKAGE_VERSION }}

  deploy:
    name: üöÄ Deploy
    environment:
      name: Production
      url: "https://${{ steps.app_name.outputs.value }}.fly.dev"
    runs-on: ubuntu-latest
    needs: [lint, typecheck, vitest, build, check]
    # only build/deploy main branch on pushes and if the version is newer
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' &&  needs.check.outputs.isNewerVersion == 'true' }}

    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ needs.check.outputs.tag }}',
              sha: context.sha
            })

      - name: Create a Release
        uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: ${{ needs.check.outputs.tag }}
          release_name: ${{ needs.check.outputs.tag }}
          draft: false
          prerelease: false
          body: |
            Automated via `./github/workflows/build-deploy.yml`

            - Author: **@${{ github.actor }}**
            - Version: `${{ env.PACKAGE_VERSION }}`
            - Release Type: `${{ needs.check.outputs.versionType }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üëÄ Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: üöÄ Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
